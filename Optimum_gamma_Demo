%load  time series
configPath
dataDir      = getDatasetsDirUCR;
datasetsName = getDatasetNamesUCRALL;
nDatasets    = numel(datasetsName);

datasetIdx = 23;
fprintf(1, 'processing dataset: %s...\n', datasetsName{datasetIdx});
ts = readucr(datasetIdx, 'train', dataDir);
nInstances = size(ts,1);
ts_data    = ts(:,2:end);
ts_labels  = ts(:,1);
seqlen = 20;

min = inf ;

% iterate through gamma
for gamma = -0.5:0.1:0.3
    
    sum_div = 0;
    for i = 1:nInstances 
        
        ts = ts_data(i,:);
        nrz_ts = zNormalizeTS(ts);
        l_nrzts = length(nrz_ts);
        
        %stretch ts
        param = struct('percentage', 0.3, ...                       
                         'amount', 2);
                     
        [ind,GroundTruth]= stretchingTS(l_nrzts,param); 
        ts_stretc = nrz_ts(ind);
        l_str = length(ts_stretc);
        
        %generate scale vector
        s_v = scalingVector(l_nrzts);
        
        %scale + stretch  ts
        scld_ts = nrz_ts.*s_v ;  %scaled ts
        scld_strd_ts = scld_ts(ind);   %scaled+stretched ts
        
        
        %align with compoundShapeDTW
       % [~,~,len_path01,align_CS01]= shapeDTWcompoundDescr(nrz_ts,ts_stretc,seqlen,gamma);
        [~,~,len_path02,align_CS02]= shapeDTWcompoundDescr(nrz_ts,scld_strd_ts,seqlen,gamma);
        
        %compute mean deviation for each of stretched and scaled+stretched
        %meanD01 = ComputeMDevEr(align_CS01,GroundTruth,l_str,len_path01);
        meanD02 = ComputeMDevEr(align_CS02,GroundTruth,l_str,len_path02);
        av_meandiv =  meanD02; %)/2 ;
        sum_div = sum_div + av_meandiv ;
                       
    end
    
    
    if sum_div < min 
        
        opt_gamma = gamma 
        min = sum_div ;
    end
end
        
opt_gamma         %#ok<NOPTS>
        
